/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DestinationGreeting,
  DestinationGreetingInterface,
} from "../../contracts/DestinationGreeting";

const _abi = [
  {
    inputs: [],
    name: "cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "greeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_originSender",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_origin",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
    ],
    name: "xReceive",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052670de0b6b3a76400006001557368db1c8d85c09d546097c65ec7dcbff4d6497cbf600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561007157600080fd5b50610b99806100816000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806313faede614610051578063ef690cc01461006f578063fc0c546a1461008d578063fd614f41146100ab575b600080fd5b6100596100db565b604051610066919061028d565b60405180910390f35b6100776100e1565b6040516100849190610338565b60405180910390f35b61009561016f565b6040516100a291906103d9565b60405180910390f35b6100c560048036038101906100c09190610619565b610195565b6040516100d29190610717565b60405180910390f35b60015481565b600080546100ee90610768565b80601f016020809104026020016040519081016040528092919081815260200182805461011a90610768565b80156101675780601f1061013c57610100808354040283529160200191610167565b820191906000526020600020905b81548152906001019060200180831161014a57829003601f168201915b505050505081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480156101f657506001548610155b610235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022c906107e5565b60405180910390fd5b60008280602001905181019061024b91906108a6565b905061025681610261565b509695505050505050565b80600090816102709190610a91565b5050565b6000819050919050565b61028781610274565b82525050565b60006020820190506102a2600083018461027e565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156102e25780820151818401526020810190506102c7565b60008484015250505050565b6000601f19601f8301169050919050565b600061030a826102a8565b61031481856102b3565b93506103248185602086016102c4565b61032d816102ee565b840191505092915050565b6000602082019050818103600083015261035281846102ff565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061039f61039a6103958461035a565b61037a565b61035a565b9050919050565b60006103b182610384565b9050919050565b60006103c3826103a6565b9050919050565b6103d3816103b8565b82525050565b60006020820190506103ee60008301846103ca565b92915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61041b81610408565b811461042657600080fd5b50565b60008135905061043881610412565b92915050565b61044781610274565b811461045257600080fd5b50565b6000813590506104648161043e565b92915050565b60006104758261035a565b9050919050565b6104858161046a565b811461049057600080fd5b50565b6000813590506104a28161047c565b92915050565b600063ffffffff82169050919050565b6104c1816104a8565b81146104cc57600080fd5b50565b6000813590506104de816104b8565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610526826102ee565b810181811067ffffffffffffffff82111715610545576105446104ee565b5b80604052505050565b60006105586103f4565b9050610564828261051d565b919050565b600067ffffffffffffffff821115610584576105836104ee565b5b61058d826102ee565b9050602081019050919050565b82818337600083830152505050565b60006105bc6105b784610569565b61054e565b9050828152602081018484840111156105d8576105d76104e9565b5b6105e384828561059a565b509392505050565b600082601f830112610600576105ff6104e4565b5b81356106108482602086016105a9565b91505092915050565b60008060008060008060c08789031215610636576106356103fe565b5b600061064489828a01610429565b965050602061065589828a01610455565b955050604061066689828a01610493565b945050606061067789828a01610493565b935050608061068889828a016104cf565b92505060a087013567ffffffffffffffff8111156106a9576106a8610403565b5b6106b589828a016105eb565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b60006106e9826106c2565b6106f381856106cd565b93506107038185602086016102c4565b61070c816102ee565b840191505092915050565b6000602082019050818103600083015261073181846106de565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061078057607f821691505b60208210810361079357610792610739565b5b50919050565b7f4d75737420706179206174206c65617374203120544553540000000000000000600082015250565b60006107cf6018836102b3565b91506107da82610799565b602082019050919050565b600060208201905081810360008301526107fe816107c2565b9050919050565b600067ffffffffffffffff8211156108205761081f6104ee565b5b610829826102ee565b9050602081019050919050565b600061084961084484610805565b61054e565b905082815260208101848484011115610865576108646104e9565b5b6108708482856102c4565b509392505050565b600082601f83011261088d5761088c6104e4565b5b815161089d848260208601610836565b91505092915050565b6000602082840312156108bc576108bb6103fe565b5b600082015167ffffffffffffffff8111156108da576108d9610403565b5b6108e684828501610878565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610914565b61095b8683610914565b95508019841693508086168417925050509392505050565b600061098e61098961098484610274565b61037a565b610274565b9050919050565b6000819050919050565b6109a883610973565b6109bc6109b482610995565b848454610921565b825550505050565b600090565b6109d16109c4565b6109dc81848461099f565b505050565b5b81811015610a00576109f56000826109c9565b6001810190506109e2565b5050565b601f821115610a4557610a16816108ef565b610a1f84610904565b81016020851015610a2e578190505b610a42610a3a85610904565b8301826109e1565b50505b505050565b600082821c905092915050565b6000610a6860001984600802610a4a565b1980831691505092915050565b6000610a818383610a57565b9150826002028217905092915050565b610a9a826102a8565b67ffffffffffffffff811115610ab357610ab26104ee565b5b610abd8254610768565b610ac8828285610a04565b600060209050601f831160018114610afb5760008415610ae9578287015190505b610af38582610a75565b865550610b5b565b601f198416610b09866108ef565b60005b82811015610b3157848901518255600182019150602085019450602081019050610b0c565b86831015610b4e5784890151610b4a601f891682610a57565b8355505b6001600288020188555050505b50505050505056fea264697066735822122027e4585ce9f27f3bac73081072e91d184243fada2b7c9b4f5dd38673931c5d0364736f6c63430008110033";

type DestinationGreetingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DestinationGreetingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DestinationGreeting__factory extends ContractFactory {
  constructor(...args: DestinationGreetingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DestinationGreeting> {
    return super.deploy(overrides || {}) as Promise<DestinationGreeting>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DestinationGreeting {
    return super.attach(address) as DestinationGreeting;
  }
  override connect(signer: Signer): DestinationGreeting__factory {
    return super.connect(signer) as DestinationGreeting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DestinationGreetingInterface {
    return new utils.Interface(_abi) as DestinationGreetingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DestinationGreeting {
    return new Contract(address, _abi, signerOrProvider) as DestinationGreeting;
  }
}
