/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SourceGreeting,
  SourceGreetingInterface,
} from "../../contracts/SourceGreeting";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IConnext",
        name: "_connext",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "connext",
    outputs: [
      {
        internalType: "contract IConnext",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "destinationDomain",
        type: "uint32",
      },
      {
        internalType: "string",
        name: "newGreeting",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "relayerFee",
        type: "uint256",
      },
    ],
    name: "updateGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052670de27db8d32bf800600055737ea6ea49b0b0ae9c5db7907d139d9cd3439862a1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561007157600080fd5b50604051610d7a380380610d7a83398181016040528101906100939190610142565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505061016f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100fd826100d2565b9050919050565b600061010f826100f2565b9050919050565b61011f81610104565b811461012a57600080fd5b50565b60008151905061013c81610116565b92915050565b600060208284031215610158576101576100cd565b5b60006101668482850161012d565b91505092915050565b608051610be2610198600039600081816102940152818161033d01526104130152610be26000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806313faede614610051578063367b98101461006f578063de4b05481461008b578063fc0c546a146100a9575b600080fd5b6100596100c7565b6040516100669190610474565b60405180910390f35b610089600480360381019061008491906106af565b6100cd565b005b610093610411565b6040516100a09190610791565b60405180910390f35b6100b1610435565b6040516100be91906107cd565b60405180910390f35b60005481565b600054600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161012d9291906107f7565b602060405180830381865afa15801561014a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016e9190610835565b10156101af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a6906108bf565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306000546040518463ffffffff1660e01b8152600401610210939291906108df565b6020604051808303816000875af115801561022f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610253919061094e565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f00000000000000000000000000000000000000000000000000000000000000006000546040518363ffffffff1660e01b81526004016102d392919061097b565b6020604051808303816000875af11580156102f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610316919061094e565b5060008260405160200161032a9190610a12565b60405160208183030381529060405290507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638aac16ba838688600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633600054601e896040518963ffffffff1660e01b81526004016103c69796959493929190610ad3565b60206040518083038185885af11580156103e4573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104099190610b7f565b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b61046e8161045b565b82525050565b60006020820190506104896000830184610465565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104ce826104a3565b9050919050565b6104de816104c3565b81146104e957600080fd5b50565b6000813590506104fb816104d5565b92915050565b600063ffffffff82169050919050565b61051a81610501565b811461052557600080fd5b50565b60008135905061053781610511565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61059082610547565b810181811067ffffffffffffffff821117156105af576105ae610558565b5b80604052505050565b60006105c261048f565b90506105ce8282610587565b919050565b600067ffffffffffffffff8211156105ee576105ed610558565b5b6105f782610547565b9050602081019050919050565b82818337600083830152505050565b6000610626610621846105d3565b6105b8565b90508281526020810184848401111561064257610641610542565b5b61064d848285610604565b509392505050565b600082601f83011261066a5761066961053d565b5b813561067a848260208601610613565b91505092915050565b61068c8161045b565b811461069757600080fd5b50565b6000813590506106a981610683565b92915050565b600080600080608085870312156106c9576106c8610499565b5b60006106d7878288016104ec565b94505060206106e887828801610528565b935050604085013567ffffffffffffffff8111156107095761070861049e565b5b61071587828801610655565b92505060606107268782880161069a565b91505092959194509250565b6000819050919050565b600061075761075261074d846104a3565b610732565b6104a3565b9050919050565b60006107698261073c565b9050919050565b600061077b8261075e565b9050919050565b61078b81610770565b82525050565b60006020820190506107a66000830184610782565b92915050565b60006107b78261075e565b9050919050565b6107c7816107ac565b82525050565b60006020820190506107e260008301846107be565b92915050565b6107f1816104c3565b82525050565b600060408201905061080c60008301856107e8565b61081960208301846107e8565b9392505050565b60008151905061082f81610683565b92915050565b60006020828403121561084b5761084a610499565b5b600061085984828501610820565b91505092915050565b600082825260208201905092915050565b7f55736572206d75737420617070726f766520616d6f756e740000000000000000600082015250565b60006108a9601883610862565b91506108b482610873565b602082019050919050565b600060208201905081810360008301526108d88161089c565b9050919050565b60006060820190506108f460008301866107e8565b61090160208301856107e8565b61090e6040830184610465565b949350505050565b60008115159050919050565b61092b81610916565b811461093657600080fd5b50565b60008151905061094881610922565b92915050565b60006020828403121561096457610963610499565b5b600061097284828501610939565b91505092915050565b600060408201905061099060008301856107e8565b61099d6020830184610465565b9392505050565b600081519050919050565b60005b838110156109cd5780820151818401526020810190506109b2565b60008484015250505050565b60006109e4826109a4565b6109ee8185610862565b93506109fe8185602086016109af565b610a0781610547565b840191505092915050565b60006020820190508181036000830152610a2c81846109d9565b905092915050565b610a3d81610501565b82525050565b6000819050919050565b6000610a68610a63610a5e84610a43565b610732565b61045b565b9050919050565b610a7881610a4d565b82525050565b600081519050919050565b600082825260208201905092915050565b6000610aa582610a7e565b610aaf8185610a89565b9350610abf8185602086016109af565b610ac881610547565b840191505092915050565b600060e082019050610ae8600083018a610a34565b610af560208301896107e8565b610b0260408301886107e8565b610b0f60608301876107e8565b610b1c6080830186610465565b610b2960a0830185610a6f565b81810360c0830152610b3b8184610a9a565b905098975050505050505050565b6000819050919050565b610b5c81610b49565b8114610b6757600080fd5b50565b600081519050610b7981610b53565b92915050565b600060208284031215610b9557610b94610499565b5b6000610ba384828501610b6a565b9150509291505056fea26469706673582212208575491a0668d17f4a1928ccca786895e392c66a40823825e33685d1869e2fab64736f6c63430008110033";

type SourceGreetingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SourceGreetingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SourceGreeting__factory extends ContractFactory {
  constructor(...args: SourceGreetingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _connext: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SourceGreeting> {
    return super.deploy(_connext, overrides || {}) as Promise<SourceGreeting>;
  }
  override getDeployTransaction(
    _connext: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_connext, overrides || {});
  }
  override attach(address: string): SourceGreeting {
    return super.attach(address) as SourceGreeting;
  }
  override connect(signer: Signer): SourceGreeting__factory {
    return super.connect(signer) as SourceGreeting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SourceGreetingInterface {
    return new utils.Interface(_abi) as SourceGreetingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SourceGreeting {
    return new Contract(address, _abi, signerOrProvider) as SourceGreeting;
  }
}
